name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        os_name: [linux, windows, macos]
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc, aarch64-apple-darwin]
        include:
          - os: ubuntu-latest
            os_name: linux
          - os: windows-latest
            os_name: windows
          - os: macos-latest
            os_name: macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install dependencies on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install openssl
          export OPENSSL_DIR=$(brew --prefix openssl)

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --bins
        env:
          OPENSSL_DIR: ${{ env.OPENSSL_DIR }}
        continue-on-error: true

      - name: Upload binaries
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: binaries-${{ matrix.os_name }}-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/sc
            target/${{ matrix.target }}/release/sc-serve

  docker:

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries-linux-x86_64-unknown-linux-gnu

      - name: Build Docker image
        run: docker build -t sc-serve .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag sc-serve ghcr.io/${{ github.repository }}/sc-serve:latest
          docker push ghcr.io/${{ github.repository }}/sc-serve:latest

  publish:

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Publish to Crates.io
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}